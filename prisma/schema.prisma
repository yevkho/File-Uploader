// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  // id      String   @id @default(uuis()) - random id's that are more secure
  email    String @unique
  userName String @unique
  password String

  folders Folder[]
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model Folder {
  id   Int     @id @default(autoincrement())
  name String  @unique
  path String? @unique

  userId Int  @default(1)
  user   User @relation(fields: [userId], references: [id])

  files File[]

  shared SharedFolder[]
}

model File {
  id         Int      @id @default(autoincrement())
  name       String
  path       String? // Optional, since you may not need it if storing in DB
  size       Int
  uploadedAt DateTime @default(now())
  folderId   Int?
  folder     Folder?  @relation(fields: [folderId], references: [id])
  
  content    Bytes // Add this field to store the file content

  url        String
}


model SharedFolder {
  id            Int       @id @default(autoincrement())
  uuid          String    @unique

  createdAt     DateTime  @default(now())
  expiresAt     DateTime
  
  folderId      Int
  folder        Folder    @relation(fields: [folderId], references: [id])
  
}